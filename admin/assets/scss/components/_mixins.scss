@mixin clearfix {
    &::before,
    &::after {
        display: table;
        content: '';
    }
    &::after {
        clear: both;
    }
}

@mixin user-select-none {
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

@mixin appearance-none {
    -webkit-appearance: none;
    -moz-appearance: none;
}

@mixin ellipsis {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

@mixin icon($name) {
    font-family: Icons, sans-serif;
    @extend .i-#{$name}::before;
}

@mixin caret($direction: bottom) {
    &::after {
        display: inline-block;
        margin-left: $caret-width;
        height: 0;

        @if $direction == bottom {
            border-top: $caret-width solid;
            border-right: $caret-width solid transparent;
            border-left: $caret-width solid transparent;
        } @else if $direction == top {
            border-right: $caret-width solid transparent;
            border-bottom: $caret-width solid;
            border-left: $caret-width solid transparent;
        }

        content: ' ';
        vertical-align: $caret-width / 2;
    }
}

@mixin focusring($color: $focusring-default-color) {
    box-shadow: 0 0 0 $focusring-width rgba($color, $focusring-opacity);
}

@mixin make-columns-globals($columns-count, $breakpoints) {
    $selectors: '';

    @each $breakpoint-name in map-keys($breakpoints) {
        @if $selectors != '' {
            $selectors: '#{$selectors}, .col-#{$breakpoint-name}';
        } @else {
            $selectors: '.col-#{$breakpoint-name}';
        }

        @for $i from 1 through $columns-count {
            $selectors: '#{$selectors}, .col-#{$breakpoint-name}-#{$i}-#{$columns-count}';
            $gcd: gcd($i, $columns-count);
            @if $gcd > 1 {
                $f: $i / $gcd;
                $g: $columns-count / $gcd;
                $selectors: '#{$selectors}, .col-#{$breakpoint-name}-#{$f}-#{$g}';
            }
        }
    }
    #{$selectors} {
        padding: 0 $columns-gutter / 2;
        width: 100%;
    }
}

@mixin make-breakpoint-columns($columns-count, $breakpoint-name) {
    .col-#{$breakpoint-name} {
        flex: 1 0 auto;
        max-width: 100%;
        width: auto;
    }

    @for $i from 1 through $columns-count {
        $selectors: '.col-#{$breakpoint-name}-#{$i}-#{$columns-count}';
        $gcd: gcd($i, $columns-count);
        @if $gcd > 1 {
            $f: $i / $gcd;
            $g: $columns-count / $gcd;
            $selectors: '#{$selectors}, .col-#{$breakpoint-name}-#{$f}-#{$g}';
        }
        #{$selectors} {
            flex: 0 0 percentage($i / $columns-count);
            max-width: percentage($i / $columns-count);
        }
    }
}

@function gcd($a, $b) {
    @if $b == 0 {
        @return $a;
    } @else {
        @return gcd($b, $a % $b);
    }
}
